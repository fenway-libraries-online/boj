#!/bin/zsh

metadata() {
    cat <<EOS
    @@VERSION 0.6.6
    @@AUTHOR Paul Hoffman <paul@flo.org>
    @@COPYRIGHT Copyright 2012-2019 Fenway Libraries Online.
EOS
}

if [[ $0 == /* && $PATH != :${0:h}: ]]; then
    # Make sure boj's parent directory is in PATH
    PATH="${PATH}:${0:h}"
fi

typeset dir=/ projdir
typeset out=${TMPDIR:-/tmp}/boj.$$.out
typeset dst
typeset log=/var/log/boj.log
typeset msg=${TMPDIR:-/tmp}/boj.$$.msg
typeset guard
typeset nomail=false alwaysmail=false keepout=false
typeset user=$(print -P %n)
typeset host=$(print -P %m)
typeset HOST=$(print -P %M)
typeset mailfrom=${MAILFROM:-$user} mailto=${MAILTO:-$user} mailsubj=${MAILSUBJ:-'$H: [$r] $c'}
typeset timestamp='%D{%Y%m%dT%H%M%S}'

typeset begin="$(print -P $timestamp)" end
typeset result
typeset cmdline cmd

[[ -w $log || -w $log:h ]] || log=~/.bojlog

main() {
    integer err
    if [[ $1 == @* ]]; then
        # boj @PROJ
        (( $# == 1 )) || usage
        typeset projpath=${1[2,-1]}
        if [[ $projpath == */* ]]; then
            projdir=$projpath
        elif [[ $projpath == .* ]]; then
            # Don't allow @./foo or @../foo
            usage
        elif [[ -n $BOJ_ROOT && -x $BOJ_ROOT/$projpath/run ]]; then
            # boj @foo --> boj $BOJ_ROOT/foo
            projdir=$BOJ_ROOT/$projpath
        elif [[ -z $BOJ_ROOT && -x ~/jobs/$projpath/run ]]; then
            # boj @foo --> boj ~/jobs/foo
            projdir=~/jobs/$projpath
        else
            usage
        fi
    else
        typeset opt
        while getopts :nmkreLd:g:o:l:f:t:s:p:v opt; do
            case $opt in
                (n) nomail=true      ;;
                (m) alwaysmail=true  ;;
                (k) keepout=true     ;;
                (r) keepout=false    ;;
                (L) log=~/.bojlog    ;;
                (d) dir=$OPTARG      ;;
                (g) guard=$OPTARG    ;;
                (o) out=$OPTARG
                    keepout=true     ;;
                (l) log=$OPTARG      ;;
                (f) mailfrom=$OPTARG ;;
                (t) mailto=$OPTARG   ;;
                (s) mailsubj=$OPTARG ;;
                (p) projdir=$OPTARG  ;;
                (v) show-version ;;
            esac
        done
        shift $(( OPTIND - 1 ))
    fi
    # More setup
    if [[ -n $projdir ]]; then
        cd $projdir || exit 2
        typeset projid=$(project-id)
        if [[ -d out.d/. && -w out.d/. ]]; then
            keepout=true
            dst=out.d
            out=$dst/$projid.$host.$user.$timestamp.$$.RUN
        else
            out=./out
        fi
        log=./boj.log
        msg=./msg
        guard=./norun
        [[ ! -e keepout    ]] || keepout=true
        [[ ! -e alwaysmail ]] || alwaysmail=true
        [[ ! -e nomail     ]] || nomail=true
        # Figure out the command to execute, and what args to give it
        if (( $# == 0 )); then
            # boj -p DIR
            cmd=./run
            cmdline=$projdir/run
        elif [[ $1 == '[' ]]; then
            shift
            if [[ ${argv[-1]} == ']' ]]; then
                # boj -p DIR [ foo bar ] ==> exec foo bar
                (( $# > 1 )) || usage
                argv[-1]=()
                cmdline="$*"
                cmd=$1; shift
            else
                # boj -p DIR [ foo bar ==> exec foo bar DIR/run
                cmd=$1; shift
                set -- $@ ./run
                cmdline="$cmd $*"
            fi
        else
            cmd=./run
            cmdline="$projdir/run $*"
        fi
    else
        (( $#argv > 0 )) || usage
        cd $dir
        cmdline="$*"
        cmd=$1; shift
    fi

    # Skip if the guard file is present
    if [[ -n $guard && -e $guard ]]; then
        end="$(print -P $timestamp)"
        printf '%-4.4s %s %s %s\n' SKIP $begin $end $cmdline >> $log
        exit 0
    fi

    # If something fails, we exit -- after calling our exit handler, which
    # takes care of logging and notification.
    set -e
    trap finish EXIT

    # Make sure all output goes to the designated file
    exec > $out 2>&1

    # Run it
    $cmd $@
    err=$?

    # Everything else happens in finish
    trap - EXIT
    finish $err
}

finish() {
    integer err=${1:-$?}
    set +e  # Turn off automatic exit on error
    # print FINISH err=$err > /dev/tty
    end="$(print -P $timestamp)"
    if [[ -z $result ]]; then
        if (( err == 0 )); then
            result=OK
        else
            result=FAIL
        fi
    fi
    printf '%-4.4s %s %s %s\n' $result $begin $end $cmdline >> $log
    # Send notification
    typeset notify=false
    if (( err != 0 )) || $alwaysmail; then
        notify=true
    elif [[ -s $out ]] && ! $nomail; then
        notify=true
    fi
    ! $notify || send-notification
    if [[ -n $dst ]]; then
        mv $out $dst/$out:t:r.$result
    else
        $keepout || rm -f $out
    fi
}

usage() {
    print 'usage: boj @PROJ' >&2
    print '       boj [OPTION]... JOB [ARG]...' >&2
    exit 1
}

send-notification() {
    {
        if [[ -z $projdir ]]; then
            expand-escapes <<EOS
From: $mailfrom
To: $mailto
Subject: $mailsubj

EOS
        else
            if [[ -e mail.$err ]]; then
                cat mail.$err
            elif [[ -e mail.$result ]]; then
                cat mail.$result
            elif [[ -e mail ]]; then
                cat mail
            else
                typeset projname='$j'
                [[ ! -f PROJNAME ]] || projname="$(head -n1 < PROJNAME)"
                cat <<EOS
From: $mailfrom
To: $mailto
Subject: \$h: [\$r] $projname

Output for job \$J follows...

EOS
            fi | expand-escapes
        fi
        cat $out
    } > $msg
    /usr/sbin/sendmail -oi -t < $msg
    $keepout || rm -f $msg
}

fatal() {
    print -- "$@" >&2
    exit 2
}

show-version() {
    typeset x VERSION AUTHOR COPYRIGHT
    metadata | fgrep '@@VERSION'   | read x VERSION
    metadata | fgrep '@@AUTHOR'    | read x AUTHOR
    metadata | fgrep '@@COPYRIGHT' | read x COPYRIGHT
    cat <<EOS
boj $VERSION by $AUTHOR
$COPYRIGHT
Licensed under the terms of the GNU General Public License, version 2.
See LICENSE for details.
EOS
    exit 0
}

expand-escapes() {
    sed -e "s#\\\$r#${result}#"    -e "s#\\\$R#${err}#"     \
        -e "s#\\\$4r#$(printf '%-4.4s' $result)#"           \
        -e "s#\\\$j#${projdir:t}#" -e "s#\\\$J#${projdir}#" \
        -e "s#\\\$u#${user}#"      -e "s#\\\$h#${host}#"    \
        -e "s#\\\$b#${begin}#"     -e "s#\\\$e#${end}#"     \
        -e "s#\\\$%#$(random)#"                             \
        -e "s#\\\$H#${HOST}#"      -e "s#\\\$c#${cmdline}#"
}

random() {
    dd if=/dev/random count=1 2> /dev/null | openssl base64 | tr +/ XQ | read -r
    print ${REPLY[1,16]}
}

project-id() {
    if [[ -s boj.id ]]; then
        cat boj.id
    else
        { pwd; print $$; date } | md5sum | awk '{print $1}' | tee boj.id
    fi
}

main "$@"

