#!/bin/zsh

metadata() {
    cat <<EOS
    @@VERSION 0.6.1
    @@AUTHOR Paul Hoffman <paul@flo.org>
    @@COPYRIGHT Copyright 2012 Fenway Libraries Online.
EOS
}

typeset dir=/ projdir
typeset out=${TMPDIR:-/tmp}/boj.$$.out
typeset log=/var/log/boj.log
typeset msg=${TMPDIR:-/tmp}/boj.$$.msg
typeset nomail=true alwaysmail=false keepout=false showenv=false
typeset user=$(print -P %n)
typeset host=$(print -P %m)
typeset HOST=$(print -P %M)
typeset mailfrom=${MAILFROM:-$user} mailto=${MAILTO:-$user} mailsubj=${MAILSUBJ:-'$H: [$r] $c'}
typeset timestamp='%D{%Y%m%dT%H%M%S}'

typeset begin="$(print -P $timestamp)"
typeset result=FAIL
integer err=0
typeset cmdline cmd

[[ -w $log || -w $log:h ]] || log=~/.bojlog

main() {
    typeset opt
    while getopts :nmkreLd:o:l:f:t:s:p:v opt; do
        case $opt in
            (n) nomail=true      ;;
            (m) alwaysmail=true  ;;
            (k) keepout=true     ;;
            (r) keepout=false    ;;
            (e) showenv=true     ;;
            (L) log=~/.bojlog    ;;
            (d) dir=$OPTARG      ;;
            (o) out=$OPTARG
                keepout=true     ;;
            (l) log=$OPTARG      ;;
            (f) mailfrom=$OPTARG ;;
            (t) mailto=$OPTARG   ;;
            (s) mailsubj=$OPTARG ;;
            (p) projdir=$OPTARG  ;;
            (v) show-version ;;
        esac
    done
    shift $(( OPTIND - 1 ))

    # More setup
    if [[ -n $projdir ]]; then
        cd $projdir
        if (( $# == 0 )); then
            # boj -p DIR
            cmd=./run
            cmdline=$projdir/run
        elif [[ $1 == '[' ]]; then
            shift
            if [[ ${argv[-1]} == ']' ]]; then
                # boj -p DIR [ foo bar ] ==> exec foo bar
                (( $# > 1 )) || usage
                argv[-1]=()
                cmdline="$*"
                cmd=$1; shift
            else
                # boj -p DIR [ foo bar ==> exec foo bar DIR/run
                cmd=$1; shift
                set -- $@ ./run
                cmdline="$cmd $*"
            fi
        else
            cmd=./run
            cmdline="$projdir/run $*"
        fi
        out=./out
        log=./boj.log
        msg=./msg
        [[ ! -e keepout    ]] || keepout=true
        [[ ! -e alwaysmail ]] || alwaysmail=true
        [[ ! -e nomail     ]] || nomail=true
        [[ ! -e showenv    ]] || showenv=true
    else
        (( $#argv > 0 )) || usage
        cd $dir
        cmdline="$*"
        cmd=$1; shift
    fi

    # Make sure all output goes to the designated file
    exec > $out 2>&1

    # Set our exit handler, which takes care of logging and notification
    TRAPEXIT() {
        err=$?
        set +e  # Turn off automatic exit on error
        typeset end="$(print -P $timestamp)"
        (( err != 0 )) || result=OK
        printf '%-4.4s %s %s %s\n' $result $begin $end $cmdline >> $log
        # Send notification
        typeset notify=false
        if (( err != 0 )) || $alwaysmail; then
            notify=true
        elif [[ -s $out ]] && ! $nomail; then
            notify=true
        fi
        ! $notify || send-notification
        $keepout || rm -f $out
    }

    # Automatically exit if a command fails
    set -e

    # Make sure we got a command to execute
    [[ -n $cmd ]] || usage

    # Run it
    $cmd $@

    # Everything else happens in TRAPEXIT
}

usage() {
    print 'usage: boj [OPTION]... JOB [ARG]...' >&2
    exit 1
}

send-notification() {
    {
        if [[ -z $projdir ]]; then
            expand-escapes <<EOS
From: $mailfrom
To: $mailto
Subject: $mailsubj

EOS
        else
            if [[ -e mail.$err ]]; then
                cat mail.$err
            elif [[ -e mail.$result ]]; then
                cat mail.$result
            elif [[ -e mail ]]; then
                cat mail
            else
                typeset projname='$j'
                [[ ! -f PROJNAME ]] || projname="$(head -n1 < PROJNAME)"
                cat <<EOS
From: $mailfrom
To: $mailto
Subject: \$h: [\$r] $projname

Output for job \$J follows...

EOS
            fi | expand-escapes
        fi
        if $showenv; then
            print -- '# -------------------------- Environment variables -------------------------'
            env
            print -- '# --------------------------------------------------------------------------'
        fi
        cat $out
    } > $msg
    /usr/sbin/sendmail -oi -t < $msg
    $keepout || rm -f $msg
}

fatal() {
    print -- "$@" >&2
    exit 2
}

show-version() {
    typeset x VERSION AUTHOR COPYRIGHT
    metadata | fgrep '@@VERSION'   | read x VERSION
    metadata | fgrep '@@AUTHOR'    | read x AUTHOR
    metadata | fgrep '@@COPYRIGHT' | read x COPYRIGHT
    cat <<EOS
boj $VERSION by $AUTHOR
$COPYRIGHT
Licensed under the terms of the GNU General Public License, version 2.
See LICENSE for details.
EOS
    exit 0
}

expand-escapes() {
    sed -e "s#\\\$r#${result}#"    -e "s#\\\$R#${err}#"     \
        -e "s#\\\$4r#$(printf '%-4.4s' $result)#"           \
        -e "s#\\\$j#${projdir:t}#" -e "s#\\\$J#${projdir}#" \
        -e "s#\\\$u#${user}#"      -e "s#\\\$h#${host}#"    \
        -e "s#\\\$H#${HOST}#"      -e "s#\\\$c#${cmdline}#"
}

main "$@"

